<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.project.mappers.UserDAO">	
	<select id="listUsers" parameterType="hashmap" resultType="com.spring.project.vo.UserVO">
		select * from 
			(select rownum rn, a.* from
				(select *
				from member
				<if test="searchType != null and searchType !=''">
					<choose>
						<when test="searchType == 'userid'">where userid LIKE '%'|| #{keyword} || '%'</when>
						<when test="searchType == 'name1'">where name LIKE '%'|| #{keyword} || '%'</when>
						<when test="searchType == 'sex'">where sex LIKE '%'|| #{keyword} || '%'</when>
						<when test="searchType == 'phone'">where phone LIKE '%'|| #{keyword} || '%'</when>
						<when test="searchType == 'address'">where address LIKE '%'|| #{keyword} || '%'</when>
						<when test="searchType == 'logincheck'">where logincheck LIKE '%'|| #{keyword} || '%'</when>
					</choose>
				</if>
				order by regidate)a
			order by rn desc)
		<![CDATA[where rn > #{pageVO.total} - (#{pageVO.currentPage} * #{pageVO.amount}) and rn <= #{pageVO.total} - ((#{pageVO.currentPage} - 1) * #{pageVO.amount})]]>
	</select>
	
	<select id="totalUsers" resultType="int">
		select count(*) from member
		<if test="searchType != null and searchType !=''">
			<choose>
				<when test="searchType == 'userid'">where userid LIKE '%'|| #{keyword} || '%'</when>
				<when test="searchType == 'name1'">where name LIKE '%'|| #{keyword} || '%'</when>
				<when test="searchType == 'sex'">where sex LIKE '%'|| #{keyword} || '%'</when>
				<when test="searchType == 'phone'">where phone LIKE '%'|| #{keyword} || '%'</when>
				<when test="searchType == 'address'">where address LIKE '%'|| #{keyword} || '%'</when>
				<when test="searchType == 'logincheck'">where logincheck LIKE '%'|| #{keyword} || '%'</when>
			</choose>
		</if>
	</select>
	
	<select id="findByID" resultType="com.spring.project.vo.UserVO">
		select * from member where userid = #{userid}
	</select>
	
	<update id="loginTimeUpdate">
		update member set LOGINDATETIME = sysdate where userid = #{userid}
	</update>
	
	<insert id="register">
		insert into member(userid, pwd, name, sex, phone, address) values (#{userid}, #{pwd}, #{name}, #{sex}, #{phone}, #{address})
	</insert>
	
	<select id="findId" resultType="String">
		select userid from member where name = #{name} and phone = #{phone}
	</select>
	
	<select id="findPw" resultType="com.spring.project.vo.UserVO">
		select * from member where userid = #{userid} and name = #{name} and phone = #{phone}
	</select>
	
	<update id="updatePw">
		update member set pwd = #{pwd} where userid = #{userid}
	</update>
	
	<update id="updateUser">
		update member set pwd = #{pwd}, name = #{name}, sex = #{sex}, phone = #{phone}, address = #{address} where userid = #{userid}
	</update>
	
	<delete id="deleteUser">
		delete from member where userid = #{userid}
	</delete>
</mapper>